{"version":3,"sources":["../../src/pages/auth/register/fundpassword/fundpassword.module.ts","../../src/pages/auth/register/fundpassword/fundpassword.ts"],"names":[],"mappings":"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","file":"47.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { FundpasswordPage } from './fundpassword';\nimport { TranslateModule} from 'ng2-translate';\n@NgModule({\n  declarations: [\n    FundpasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(FundpasswordPage),TranslateModule\n  ],\n})\nexport class FundpasswordPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/register/fundpassword/fundpassword.module.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, NavController, NavParams, ToastController} from 'ionic-angular';\nimport {TransferService} from \"../../../../providers/financial-service/account-transfer-service\";\nimport {FundPassword} from \"../../../../providers/messages/user-auth-msg\";\nimport { CommonUtils} from '../../../../providers/common/commonUtils'\nimport { NewpayInstance } from 'newpay-wallet-js';\nimport 'rxjs/add/operator/toPromise';\nimport { TranslateService } from 'ng2-translate';\nimport {ConfService} from  '../../../../providers/util-service/conf-service'\nimport { PincodeController } from  'ionic2-pincode-input/dist/pincode'\n/**\n * Generated class for the FundpasswordPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-fundpassword',\n  templateUrl: 'fundpassword.html',\n})\nexport class FundpasswordPage {\n    userId:string;\n    code:any;\n    brainKey:string;\n    accountName:string;\n  // fundpassword:string;\n  refundpassword:string;\n  fundpassword: any = {password:''};\n    translateObj: any;\n    flag:boolean = false;\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              private alertCtrl: AlertController,\n              private confService:ConfService,\n              private transfer: TransferService,\n              public pincodeCtrl: PincodeController,\n              public toastCtrl:ToastController,\n              public commonUtils:CommonUtils,\n              public translate:TranslateService) {\n                console.log(this.navParams.get('userid'))\n              this.userId = this.navParams.get('userid');\n              this.translate.get('fundpassword').subscribe((res: any) => {\n                  this.translateObj = res;\n              });\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad FundpasswordPage');\n    //清空indexDB 和loacal\n  }\n  goBack(){\n\n    // this.showPopup(\"\",\"资金密码设置失败，可能会影响您的正常使用\");\n      this.navCtrl.pop();\n\n    // this.navCtrl.push(\"TabsPage\");\n    }\n\n    registerFund(){\n        var re = new RegExp(\"^[a-zA-Z]+$\");\n\n       //要包含数字的话是 new RegExp(\"^[a-zA-Z0-9]+$\");\n        NewpayInstance.checkAccountExists(this.accountName).then(res=>{\n            this.flag =false;\n            console.log(res)\n            for(let i = 0 ;i< res.length; i++){\n                console.log(res[i][0])\n                if(this.accountName === res[i][0]){\n                    this.flag=true\n                }\n            }\n            if(this.flag){\n                this.commonUtils.alertCommon('提示','该账户已经存在!')\n                return;\n            }else{\n                if (re.test(this.accountName)) {\n                    console.log(\"不支持\")\n                    this.commonUtils.alertCommon(\"提示\",\"不支持高级名称注册\");\n                    return;\n                }else {\n                    console.log(NewpayInstance.checkAccountExists(this.accountName))\n                    debugger\n                    // if(){\n                    //\n                    // }\n\n                    let pinCode = this.pincodeCtrl.create({\n                        title: '输入密码'\n                    });\n\n                    pinCode.present();\n\n                    pinCode.onDidDismiss((code, status) => {\n\n                        if (status === 'done') {\n                            this.code = code;\n                            console.log(code)\n                            // this.accountName = \"\" //账户的名字   账户存在 那么钱包是肯定存在的。 np +登陆名 电话号码\n                            this.commonUtils.showLoading();\n                            console.log(this.accountName);\n                            let password = code\n                            NewpayInstance.createWalletAndAccount(\"default\", this.accountName, this.confService.hydrantHttp, password).then(() => { //钱包的名字\n                                //如果是导入 WalletManagerStore.onSetWallet（ 钱包名，钱包密码，脑钥）返回的是 成功不成功\n                                //先创建钱包 当钱包设置成功去 创建 账户\n                                console.log(\"创建钱包成功\");\n                                this.commonUtils.HideLoading();\n                                localStorage.setItem(\"account\", this.accountName);\n                                this.showToast(this.translateObj.resetPwSuccess);\n                                this.brainKey = NewpayInstance.exportBrainKey()\n                                console.log(this.brainKey);\n                                localStorage.setItem(\"brainKey\", this.brainKey);\n                                //是否 进行备份 如果 备份  就跳转到备份页面，备份成功跳转到home页，如果不备份则直接跳转到home页\n                                this.showConfirm();\n                            }, (err) => {\n                                console.log(\"AAAAAAAAAA\")\n                            }).catch(error => {\n                                console.log(\"创建钱包失败\");\n                                console.log(\"ERROR AccountActions.createAccount\", error);\n                                let error_msg = error.base && error.base.length && error.base.length > 0 ? error.base[0] : \"unknown error\";\n                                if (error.remote_ip) error_msg = error.remote_ip[0];\n                                this.commonUtils.HideLoading();\n                                this.showToast(error)\n                            });\n                        } else if (status === 'forgot') {\n\n                            // forgot password\n                        }\n\n                    })\n                }\n            }\n        })\n    }\n    showToast(content){\n        let toast = this.toastCtrl.create({\n            message: content,\n            duration: 3000\n        });\n        toast.present();\n    }\n\n    showPopup(title, text) {\n        let alert = this.alertCtrl.create({\n            title: title,\n            subTitle: text,\n            buttons: [\n                {\n                    text: this.translateObj.confirm,\n                }\n            ]\n        });\n        alert.present();\n    }\n\n\n    showConfirm() {\n        let confirm = this.alertCtrl.create({\n            title: this.translateObj.backup_title,\n            message: this.translateObj.backup_memo,\n            buttons: [\n                // {\n                //     text: this.translateObj.cancel,\n                //     handler: () => {\n                //         console.log('Disagree clicked');\n                //         this.navCtrl.push(\"TabsPage\");\n                //         //到主页\n                //     }\n                // },\n                {\n                    text: this.translateObj.confirm,\n                    handler: () => {\n                        console.log('Agree clicked');\n                        //获取脑钥。\n                     // this.brainKey =   WalletDb.getBrainKey()\n                        console.log(this.brainKey);\n                        this.navCtrl.push(\"BackupsKeyPage\",{brainKey:this.brainKey});\n                        //到备份页面\n                    }\n                }\n            ]\n        });\n        confirm.present();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/register/fundpassword/fundpassword.ts"],"sourceRoot":""}